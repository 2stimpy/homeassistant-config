################################################################
## Unused automations
################################################################
- id: ring_camera_notification
  alias: 'Notify Ring camera'
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: input_select.abodestatus
      state: 'armed_away'
  trigger:
   - platform: state
     entity_id: sensor.ringvideourl
  action:
    - service: notify.ios
      data_template:
        message: "Check Ring camera."
        data:
          push:
            category: camera
          entity_id: camera.front_door
          attachment:
            url: "{{ states.camera.front_door.attributes.video_url }}"

- id: ring_download_video
  alias: 'Ring download video'
  initial_state: 'on'
  trigger:
   - platform: state
     entity_id: sensor.ringvideourl
  action:
    - service: downloader.download_file
      data_template:
        url: "{{ states.camera.front_door.attributes.video_url }}"
        subdir: "{{'ring_' + states.camera.front_door.attributes.friendly_name.lower().replace(' ', '_')}}"
        overwrite: True
        filename: "{{states.camera.front_door.attributes.friendly_name.lower().replace(' ', '_')+ '.mp4'}}"


- id: notify_camera_pictures_telegram
  alias: 'Notify camera pictures using Telegram'
  initial_state: 'on'
  trigger:
   - platform: time
     minutes: '/2'
     seconds: 00
  action:
    - service: notify.telegram
      data_template:
        message: "Check camera."
        data:
          photo:
            - url: !secret porch_camera_image_url
              caption: "Test"


## Humidifier
- id: turn_on_humidifier
  alias: Turn on humidifier
  initial_state: 'on'
  condition:
     - condition: time
       after: '08:15:00'
       before: '21:45:00'
     - condition: template
       value_template: '{{ states.sensor.leeohumid.state | int < 30 }}'
     - condition: state
       entity_id: switch.wemoswitch
       state: 'off'
  trigger:
   - platform: time
     minutes: '/10'
     seconds: 00
  action:
    service: homeassistant.turn_on
    entity_id: switch.wemoswitch

- id: turn_off_humidifier
  alias: Turn off humidifier
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: switch.wemoswitch
      state: 'on'
  trigger:
    platform: template
    value_template: '{{ states.sensor.leeohumid.state | int >= 30 }}'
  action:
    service: homeassistant.turn_off
    entity_id: switch.wemoswitch

- alias: 'Switch turned on when nobody is home v1'
  condition:
    condition: state
    entity_id: input_select.abodestatus
    state: 'away'
  trigger:
    - platform: state
      entity_id:
        - group.all_switches
      to: 'on'
  action:
    - service: notify.pushbullet
      data_template:
        message: >
          {% for entity in states.group.all_switches.attributes.entity_id %}
            {%- if is_state(entity, 'on') %}
              {{ states[entity.split('.')[0]][entity.split('.')[1]].name }}
            {%- endif %}
          {%- endfor %}
        title: "Switch turned on"
        target: device/myiPhone

- alias: 'Switch turned on when nobody is home v2'
  condition:
    condition: state
    entity_id: input_select.abodestatus
    state: 'away'
  trigger:
    - platform: state
      entity_id:
        - group.all_switches
      to: 'on'
  action:
    - service: notify.pushbullet
      data_template:
        message: >
          {% for entity in states.group.all_switches.attributes.entity_id if is_state(entity, 'on') %}
            {%- if loop.first and loop.last %}
              {{ states[entity.split('.')[0]][entity.split('.')[1]].name }} is on.
            {% elif loop.length == length(states.group.all_switches.attributes.entity_id) %}
              {{ "All switches are on." if loop.last }}
            {% else %}
              {%- if loop.first %}{% elif loop.last %} & {% else %}, {% endif -%}
              {{ states[entity.split('.')[0]][entity.split('.')[1]].name }}{{ " are on" if loop.last }}
            {%- endif -%}
          {% else %}
            All switches are off.
          {% endfor %}
        title: "Switch turned on"
        target: device/myiPhone
- alias: 'Change Lifx color'
  trigger:
   - platform: time
     minutes: '/1'
     seconds: 00
  action:
     service: ifttt.trigger
     data_template: {"event":"lifxcolor", "value1":"{{ '{:02x}{:02x}{:02x}'.format(range(0, 255) | random, range(0, 255) | random, range(0, 255) | random) }}"}
#################################################################
## Unused Sensors
#################################################################
