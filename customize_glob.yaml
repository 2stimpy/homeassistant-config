automation.*:
  custom_ui_state_card: state-card-custom-ui
  extra_data_template: >-
    if(!attributes.last_triggered)return null;
    var t,s=(new Date()-new Date(attributes.last_triggered))/1e3;
    return(
    (t=Math.floor(s/86400))?t+(t>1?" days":" day"):
    (t=Math.floor(s/3600))?t+(t>1?" hours":" hour"):
    (t=Math.floor(s/60))?t+(t>1?" minutes":" minute"):
    (t=Math.floor(s))!==1?t+" seconds":" second"
    )+" ago";
device_tracker.*:
  custom_ui_state_card: state-card-custom-ui
  extra_data_template: >-
    if(!attributes.last_changed)return null;
    var t,s=(new Date()-new Date(attributes.last_changed))/1e3;
    return(
    (t=Math.floor(s/86400))?t+(t>1?" days":" day"):
    (t=Math.floor(s/3600))?t+(t>1?" hours":" hour"):
    (t=Math.floor(s/60))?t+(t>1?" minutes":" minute"):
    (t=Math.floor(s))!==1?t+" seconds":" second"
    )+" ago";
sensor.*_futures_change:
 templates:
   icon_color: >
     if (state > 0) return 'rgb(50,205,50)'; else return 'rgb(178,34,34)';
sensor.*_futures_change_pct:
  templates:
    icon_color: >
      if (state < -5) return 'rgb(151, 26, 30)';
      if (state < -4) return 'rgb(194, 39, 45)';
      if (state < -3) return 'rgb(236, 27, 33)';
      if (state < -2) return 'rgb(244, 101, 35)';
      if (state < -1) return 'rgb(248, 147, 29)';
      if (state < 0) return 'rgb(255, 194, 15)';
      if (state < 1) return 'rgb(202, 219, 43)';
      if (state < 2) return 'rgb(142, 198, 65)';
      if (state < 3) return 'rgb(106, 158, 47)';
      if (state < 4) return 'rgb(37, 145, 60)';
      return 'rgb(0, 111, 58)';
